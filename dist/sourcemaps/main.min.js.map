{"version":3,"sources":["01_main.js"],"names":["visitContainer","document","querySelector","CreateVisitModal","[object Object]","this","modal","createElement","classList","add","innerHTML","body","appendChild","selectElement","getElementById","fieldsContainer","addEventListener","handleDoctorChange","bind","selectedDoctor","value","updateAdditionalFields","createInputField","createSelectField","createBtn","innerText","createVisit","closeBtn","closeVisitModal","remove","inputs","querySelectorAll","visitData","options","selectedIndex","text","forEach","input","id","type","visit","console","log","Card","addToVisitsList","fieldName","label","inputField","selectField","selectOptions","map","option","join","toLowerCase","data","card","createCard","visitsListSection","additionalInfoContainer","cardElement","fullName","renderAdditionalInfo","handleButtonClick","translations","doctorName","purpose","description","urgency","pressure","bmi","cardiovascularDiseases","age","lastVisitDate","additionalInfoHtml","key","event","target","contains","redactCard","deleteCard","showCard","showMoreBtn","toggle","testObj","cardInstance","cardInstance2","cardInstance3"],"mappings":"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","file":"../js/main.min.js","sourcesContent":["const visitContainer = document.querySelector(\".visits-list\");\n\nclass CreateVisitModal {\n    constructor() {\n        this.modal = document.createElement('div');\n        this.modal.classList.add('creadeVisitModal');\n        this.modal.innerHTML = `\n        <div class=\"modal-content\">\n            <label for=\"doctorSelect\">Оберіть лікаря:</label>\n            <select id=\"doctorSelect\">\n                <option value=\"\" disabled selected hidden>Оберіть лікаря</option>\n                <option value=\"cardiologist\">Кардіолог</option>\n                <option value=\"dentist\">Стоматолог</option>\n                <option value=\"therapist\">Терапевт</option>\n            </select>\n            <div id=\"fieldsContainer\"></div>\n        </div>\n        `;\n\n        document.body.appendChild(this.modal);\n\n        this.selectElement = document.getElementById('doctorSelect');\n        this.fieldsContainer = document.getElementById('fieldsContainer');\n        this.selectElement.addEventListener('change', this.handleDoctorChange.bind(this));\n    }\n    handleDoctorChange() {\n        const selectedDoctor = this.selectElement.value;\n        this.updateAdditionalFields(selectedDoctor);\n    }\n    updateAdditionalFields(selectedDoctor) {\n\n        this.fieldsContainer.innerHTML = '';\n\n        this.createInputField(\"purpose\",\"Мета візиту\")\n        this.createInputField(\"description\",\"Короткий опис візиту\")\n        this.createSelectField(\"urgency\", \"Терміновість\", [\"Звичайна\", \"Пріоритетна\", \"Невідкладна\"],\"оберіть терміновість\");\n        this.createInputField(\"fullName\",\"ПІБ\")\n\n        if (selectedDoctor === 'cardiologist') {\n            this.createInputField('pressure', 'Звичайний тиск:');\n            this.createInputField('bmi', 'Індекс маси тіла:');\n            this.createInputField('cardiovascularDiseases', 'Перенесені захворювання серцево-судинної системи:');\n            this.createInputField('age', 'Вік:');\n        } else if (selectedDoctor === 'dentist') {\n            this.createInputField('lastVisitDate', 'Дата останнього відвідування:');\n        } else if (selectedDoctor === 'therapist') {\n            this.createInputField('age', 'Вік:');\n        }\n\n        const createBtn = document.createElement('button');\n        createBtn.innerText = 'Створити';\n        createBtn.addEventListener('click', () => this.createVisit());\n        this.fieldsContainer.appendChild(createBtn);\n\n        const closeBtn = document.createElement('button');\n        closeBtn.innerText = 'Закрити';\n        closeBtn.addEventListener('click', () => this.closeVisitModal());\n        this.fieldsContainer.appendChild(closeBtn);\n\n    }\n\n    closeVisitModal(){\n        this.modal.remove();\n    }\n    createVisit(){\n        const inputs = this.fieldsContainer.querySelectorAll('.modalInput');\n        const visitData = {};\n\n        visitData['selectedDoctor'] = visitData['selectedDoctor'] = this.selectElement.options[this.selectElement.selectedIndex].text;;\n\n        inputs.forEach(input => {\n            const id = input.id;\n            const value = input.type === 'select-one' ? input.options[input.selectedIndex].value : input.value;\n            visitData[id] = value;\n        });\n\n        this.visit = visitData;\n        \n        console.log(createVisit.visit);\n        this.closeVisitModal();\n        //виклик функції для створення картки та відправлення на сервер------\n        const card = new Card(createVisit.visit);\n        card.addToVisitsList();\n        //-------------------------------------------------------------------\n    }\n\n    createInputField(fieldName, label) {\n        const inputField = document.createElement('div');\n        inputField.innerHTML = `\n            <label for=\"${fieldName}\">${label}</label>\n            <input type=\"text\" id=\"${fieldName}\" name=\"${fieldName}\" class=\"modalInput\">\n        `;\n        this.fieldsContainer.appendChild(inputField);\n    }\n    createSelectField(fieldName, label, options) {\n        const selectField = document.createElement('div');\n        const selectOptions = options.map(option => `<option value=\"${option}\">${option}</option>`).join('');\n        selectField.innerHTML = `\n            <label for=\"${fieldName}\">${label}</label>\n            <select id=\"${fieldName}\" name=\"${fieldName}\" class=\"modalInput\">\n                <option value=\"\" disabled selected hidden>Оберіть ${label.toLowerCase()}</option>\n                ${selectOptions}\n            </select>\n        `;\n        this.fieldsContainer.appendChild(selectField);\n    }\n}\n\n//тестова строчка допоки не буде кнопки для створення візиту--------\nconst createVisit = new CreateVisitModal();\n//------------------------------------------------------------------\n//----------------------------------------------------------------------------------------\n// картка візиту\n// class VisitCard {\n//     constructor(visitData) {\n//         this.visitData = visitData;\n//         this.isExpanded = false;\n//         this.isEditing = false;\n//         this.createCardElement();\n//         this.render();\n//     }\n\n//     createCardElement() {\n//         this.cardElement = document.createElement('div');\n//         this.cardElement.classList.add('visitCard');\n\n//         // Додати інформацію, яка завжди видима\n//         this.cardElement.innerHTML = `\n//             <div class=\"visibleInfo\">\n//                 <p>ПІБ: ${this.visitData.fullName}</p>\n//                 <p>Лікар: ${this.visitData.doctorName}</p>\n//             </div>\n//             <div class=\"additionalInfoContainer\"></div>\n//             <button class=\"showMoreBtn\">Показати більше</button>\n//             <button class=\"editBtn\">Редагувати</button>\n//             <button class=\"saveChangesBtn\" style=\"display: none;\">Зберегти зміни</button>\n//             <span class=\"deleteIcon\">❌</span>\n//         `;\n\n//         // Додати обробники подій\n//         this.cardElement.querySelector('.showMoreBtn').addEventListener('click', () => this.toggleExpanded());\n//         this.cardElement.querySelector('.editBtn').addEventListener('click', () => this.toggleEditing());\n//         this.cardElement.querySelector('.saveChangesBtn').addEventListener('click', () => this.saveChanges());\n//         this.cardElement.querySelector('.deleteIcon').addEventListener('click', () => this.deleteCard());\n//     }\n\n//     render() {\n//         const additionalInfoContainer = this.cardElement.querySelector('.additionalInfoContainer');\n//         additionalInfoContainer.innerHTML = ''; // Очищаємо контейнер перед відображенням\n\n//         if (this.isExpanded) {\n//             Object.keys(this.visitData).forEach(key => {\n//                 additionalInfoContainer.innerHTML += `<p>${key}: ${this.visitData[key]}</p>`;\n//             });\n//         }\n\n//         document.querySelector('.visits-list').appendChild(this.cardElement);\n\n//         this.cardElement.querySelector('.showMoreBtn').innerText = this.isExpanded ? 'Показати менше' : 'Показати більше';\n//     }\n\n//     toggleExpanded() {\n//         this.isExpanded = !this.isExpanded;\n//         this.render();\n//     }\n\n//     toggleEditing() {\n//         this.isEditing = !this.isEditing;\n//         const additionalInfoContainer = this.cardElement.querySelector('.additionalInfoContainer');\n//         const visibleInfoContainer = this.cardElement.querySelector('.visibleInfo');\n\n//         if (this.isEditing) {\n//             visibleInfoContainer.style.display = 'none';\n//             additionalInfoContainer.style.display = 'block';\n//         } else {\n//             additionalInfoContainer.style.display = 'none';\n//             visibleInfoContainer.style.display = 'block';\n\n//             visibleInfoContainer.innerHTML = `\n//                 <p>ПІБ: ${this.visitData.fullName}</p>\n//                 <p>Лікар: ${this.visitData.doctorName}</p>\n//             `;\n//         }\n\n//         this.renderEditForm();\n//     }\n\n//     renderEditForm() {\n//         const additionalInfoContainer = this.cardElement.querySelector('.additionalInfoContainer');\n//         additionalInfoContainer.innerHTML = `\n//             <label for=\"editedFullName\">ПІБ:</label>\n//             <input type=\"text\" id=\"editedFullName\" value=\"${this.visitData.fullName}\">\n//             <label for=\"editedSelectedDoctor\">Лікар:</label>\n//             <input type=\"text\" id=\"editedSelectedDoctor\" value=\"${this.visitData.doctorName}\">\n//             <label for=\"editedPurpose\">Мета:</label>\n//             <input type=\"text\" id=\"editedPurpose\" value=\"${this.visitData.purpose}\">\n//             <!-- Додайте інші поля редагування, використовуючи this.visitData -->\n//         `;\n//     }\n\n//     saveChanges() {\n//         this.visitData.fullName = document.getElementById('editedFullName').value;\n//         this.visitData.doctorName = document.getElementById('editedSelectedDoctor').value;\n//         this.visitData.purpose = document.getElementById('editedPurpose').value;\n//         // Оновіть інші поля, якщо необхідно\n//         // ...\n\n//         const additionalInfoContainer = this.cardElement.querySelector('.additionalInfoContainer');\n//         const visibleInfoContainer = this.cardElement.querySelector('.visibleInfo');\n\n//         additionalInfoContainer.style.display = 'none';\n//         visibleInfoContainer.style.display = 'block';\n\n//         visibleInfoContainer.innerHTML = `\n//             <p>ПІБ: ${this.visitData.fullName}</p>\n//             <p>Лікар: ${this.visitData.doctorName}</p>\n//         `;\n\n//         this.cardElement.querySelector('.editBtn').style.display = 'inline-block';\n//         this.cardElement.querySelector('.saveChangesBtn').style.display = 'none';\n//     }\n\n//     deleteCard() {\n//         this.cardElement.remove();\n//     }\n// }\n\n// class VisitCardManager {\n//     constructor() {\n//         this.visitsList = document.querySelector('.visits-list');\n//     }\n\n//     addVisitCard(visitData) {\n//         const visitCard = new VisitCard(visitData);\n//         this.visitsList.appendChild(visitCard.cardElement);\n//     }\n// }\n\n// const visitCardManager = new VisitCardManager();\n\n// // Приклад данних для кількох візитів\n// const visitsData = [\n//     { \n//         doctorName: 'Доктор Іванова',\n//         purpose: 'Регулярний огляд',\n//         description: 'Аналіз крові та артеріального тиску',\n//         urgency: 'Пріоритетна',\n//         fullName: 'Петренко Іван Петрович',\n//         bloodPressure: '120/80',\n//         bmi: 24.5,\n//         cardiovascularDiseases: 'Немає',\n//         age: 35,\n//         lastVisitDate: '2023-01-09'\n//     },\n//     { \n//         doctorName: 'Доктор Іванова',\n//         purpose: 'Регулярний огляд',\n//         description: 'Аналіз крові та артеріального тиску',\n//         urgency: 'Пріоритетна',\n//         fullName: 'Петренко Іван Петрович',\n//         bloodPressure: '120/80',\n//         bmi: 24.5,\n//         cardiovascularDiseases: 'Немає',\n//         age: 35,\n//         lastVisitDate: '2023-01-09'\n//     },\n//     // Додавайте більше об'єктів даних візитів за потреби\n// ];\n\n// visitsData.forEach(visitData => {\n//     visitCardManager.addVisitCard(visitData);\n// });\n\n\nclass Card {\n    constructor(visitData) {\n        this.data = visitData;\n        this.card = this.createCard();\n        this.visitsListSection = document.querySelector('.visits-list');\n        this.additionalInfoContainer = this.card.querySelector('.additionalInfoContainer');\n    }\n\n    createCard() {\n        const cardElement = document.createElement(\"div\");\n        cardElement.classList.add(\"visitCard\");\n        cardElement.innerHTML = `\n            <div class=\"visibleInfo\">\n                <p>ПІБ: ${this.data.fullName}</p>\n                <p>Лікар: ${this.data.selectedDoctor}</p>\n            </div>\n            <div class=\"additionalInfoContainer\">\n                ${this.renderAdditionalInfo()}\n            </div>\n            <div class=\"buttonsContainer\">\n                <button class=\"showMoreBtn\">Показати більше</button>\n                <button class=\"editBtn\">Редагувати</button>\n                <button class=\"deleteIcon\">❌</button>\n            </div>\n        `;\n        cardElement.addEventListener('click', this.handleButtonClick.bind(this));\n        return cardElement;\n    }\n\n    renderAdditionalInfo() {\n        const translations = {\n            doctorName: 'Лікар',\n            purpose: 'Мета візиту',\n            description: 'Короткий опис візиту',\n            urgency: 'Терміновість',\n            fullName: 'ПІБ',\n            pressure: 'Звичайний тиск',\n            bmi: 'Індекс маси тіла',\n            cardiovascularDiseases: 'Перенесені захворювання серцево-судинної системи',\n            age: 'Вік',\n            lastVisitDate: 'Дата останнього відвідування'\n        };\n        let additionalInfoHtml = '';\n        for (const key in this.data) {\n            if (key !== 'selectedDoctor' && key !== 'fullName') {\n                const translatedKey = translations[key] || key;\n                additionalInfoHtml += `<p>${translatedKey}: ${this.data[key]}</p>`;\n            }\n        }\n        return additionalInfoHtml;\n    }\n//------------------------кнопки--------------------------------------------\n    handleButtonClick(event) {\n        const target = event.target;\n        if (target.classList.contains('editBtn')) {\n            this.redactCard();\n        } else if (target.classList.contains('deleteIcon')) {\n            this.deleteCard();\n        } else if (target.classList.contains(\"showMoreBtn\")){\n            this.showCard();\n        }\n    }\n\n    deleteCard() {\n        this.card.remove();\n    }\n    showCard(){\n        const showMoreBtn = this.card.querySelector('.showMoreBtn')\n        this.additionalInfoContainer.classList.toggle('active');\n        showMoreBtn.innerText = this.additionalInfoContainer.classList.contains(\"active\") ? \"Згорнути\" : \"Показати більше\";\n    }\n    redactCard(){\n\n    }\n//---------------------------------------------------------------------------\n    addToVisitsList() {\n        this.visitsListSection.appendChild(this.card);\n    }\n}\n//-----------------------------------------------------------------------------\n\nconst testObj ={ \n            selectedDoctor: 'Кардіолог',\n            purpose: 'Регулярний огляд',\n            description: 'Аналіз крові та артеріального тиску',\n            urgency: 'Пріоритетна',\n            fullName: 'Петренко Іван Петрович',\n            pressure: '120/80',\n            bmi: 24.5,\n            cardiovascularDiseases: 'Немає',\n            age: 35,\n            lastVisitDate: '2023-01-09'\n        }\n\n        const cardInstance = new Card(testObj);\n        cardInstance.addToVisitsList();\n\n        const cardInstance2 = new Card(testObj);\n        cardInstance2.addToVisitsList()\n\n        const cardInstance3 = new Card(testObj);\n        cardInstance3.addToVisitsList()"]}