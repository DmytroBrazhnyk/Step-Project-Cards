{"version":3,"sources":["01_main.js"],"names":["visitContainer","document","querySelector","CreateVisitModal","[object Object]","this","modal","createElement","classList","add","innerHTML","body","appendChild","selectElement","getElementById","fieldsContainer","addEventListener","handleDoctorChange","bind","selectedDoctor","value","updateAdditionalFields","createInputField","createSelectField","createBtn","innerText","createVisit","closeBtn","closeVisitModal","remove","inputs","querySelectorAll","visitData","options","selectedIndex","text","forEach","input","id","type","visit","console","log","fieldName","label","inputField","selectField","selectOptions","map","option","join","toLowerCase"],"mappings":"AAAA,MAAMA,eAAiBC,SAASC,cAAc,gBAE9C,MAAMC,iBACFC,cACIC,KAAKC,MAAQL,SAASM,cAAc,OACpCF,KAAKC,MAAME,UAAUC,IAAI,oBACzBJ,KAAKC,MAAMI,UAAY,4fAavBT,SAASU,KAAKC,YAAYP,KAAKC,OAE/BD,KAAKQ,cAAgBZ,SAASa,eAAe,gBAC7CT,KAAKU,gBAAkBd,SAASa,eAAe,mBAC/CT,KAAKQ,cAAcG,iBAAiB,SAAUX,KAAKY,mBAAmBC,KAAKb,OAE/ED,qBACI,MAAMe,EAAiBd,KAAKQ,cAAcO,MAC1Cf,KAAKgB,uBAAuBF,GAEhCf,uBAAuBe,GAEnBd,KAAKU,gBAAgBL,UAAY,GAEjCL,KAAKiB,iBAAiB,UAAU,eAChCjB,KAAKiB,iBAAiB,cAAc,wBACpCjB,KAAKkB,kBAAkB,UAAW,eAAgB,CAAC,WAAY,cAAe,eAAe,wBAC7FlB,KAAKiB,iBAAiB,WAAW,OAEV,iBAAnBH,GACAd,KAAKiB,iBAAiB,WAAY,mBAClCjB,KAAKiB,iBAAiB,MAAO,qBAC7BjB,KAAKiB,iBAAiB,gBAAiB,qDACvCjB,KAAKiB,iBAAiB,MAAO,SACH,YAAnBH,EACPd,KAAKiB,iBAAiB,gBAAiB,iCACb,cAAnBH,GACPd,KAAKiB,iBAAiB,MAAO,QAGjC,MAAME,EAAYvB,SAASM,cAAc,UACzCiB,EAAUC,UAAY,WACtBD,EAAUR,iBAAiB,QAAS,IAAMX,KAAKqB,eAC/CrB,KAAKU,gBAAgBH,YAAYY,GAEjC,MAAMG,EAAW1B,SAASM,cAAc,UACxCoB,EAASF,UAAY,UACrBE,EAASX,iBAAiB,QAAS,IAAMX,KAAKuB,mBAC9CvB,KAAKU,gBAAgBH,YAAYe,GAIrCvB,kBACIC,KAAKC,MAAMuB,SAEfzB,cACI,MAAM0B,EAASzB,KAAKU,gBAAgBgB,iBAAiB,eAC/CC,EAAY,GAElBA,EAA0B,eAAIA,EAA0B,eAAI3B,KAAKQ,cAAcoB,QAAQ5B,KAAKQ,cAAcqB,eAAeC,KAEzHL,EAAOM,QAAQC,IACX,MAAMC,EAAKD,EAAMC,GACXlB,EAAuB,eAAfiB,EAAME,KAAwBF,EAAMJ,QAAQI,EAAMH,eAAed,MAAQiB,EAAMjB,MAC7FY,EAAUM,GAAMlB,IAGpBf,KAAKmC,MAAQR,EAEbS,QAAQC,IAAIhB,YAAYc,OACxBnC,KAAKuB,kBAMTxB,iBAAiBuC,EAAWC,GACxB,MAAMC,EAAa5C,SAASM,cAAc,OAC1CsC,EAAWnC,UAAY,6BACLiC,MAAcC,iDACHD,YAAoBA,mCAEjDtC,KAAKU,gBAAgBH,YAAYiC,GAErCzC,kBAAkBuC,EAAWC,EAAOX,GAChC,MAAMa,EAAc7C,SAASM,cAAc,OACrCwC,EAAgBd,EAAQe,IAAIC,GAAU,kBAAkBA,MAAWA,cAAmBC,KAAK,IACjGJ,EAAYpC,UAAY,6BACNiC,MAAcC,sCACdD,YAAoBA,6FACsBC,EAAMO,2CACxDJ,qCAGV1C,KAAKU,gBAAgBH,YAAYkC,IAKzC,MAAMpB,YAAc,IAAIvB","file":"../js/main.min.js","sourcesContent":["const visitContainer = document.querySelector(\".visits-list\");\n\nclass CreateVisitModal {\n    constructor() {\n        this.modal = document.createElement('div');\n        this.modal.classList.add('creadeVisitModal');\n        this.modal.innerHTML = `\n        <div class=\"modal-content\">\n            <label for=\"doctorSelect\">Оберіть лікаря:</label>\n            <select id=\"doctorSelect\">\n                <option value=\"\" disabled selected hidden>Оберіть лікаря</option>\n                <option value=\"cardiologist\">Кардіолог</option>\n                <option value=\"dentist\">Стоматолог</option>\n                <option value=\"therapist\">Терапевт</option>\n            </select>\n            <div id=\"fieldsContainer\"></div>\n        </div>\n        `;\n\n        document.body.appendChild(this.modal);\n\n        this.selectElement = document.getElementById('doctorSelect');\n        this.fieldsContainer = document.getElementById('fieldsContainer');\n        this.selectElement.addEventListener('change', this.handleDoctorChange.bind(this));\n    }\n    handleDoctorChange() {\n        const selectedDoctor = this.selectElement.value;\n        this.updateAdditionalFields(selectedDoctor);\n    }\n    updateAdditionalFields(selectedDoctor) {\n\n        this.fieldsContainer.innerHTML = '';\n\n        this.createInputField(\"purpose\",\"Мета візиту\")\n        this.createInputField(\"description\",\"Короткий опис візиту\")\n        this.createSelectField(\"urgency\", \"Терміновість\", [\"Звичайна\", \"Пріоритетна\", \"Невідкладна\"],\"оберіть терміновість\");\n        this.createInputField(\"fullName\",\"ПІБ\")\n\n        if (selectedDoctor === 'cardiologist') {\n            this.createInputField('pressure', 'Звичайний тиск:');\n            this.createInputField('bmi', 'Індекс маси тіла:');\n            this.createInputField('heartDiseases', 'Перенесені захворювання серцево-судинної системи:');\n            this.createInputField('age', 'Вік:');\n        } else if (selectedDoctor === 'dentist') {\n            this.createInputField('lastVisitDate', 'Дата останнього відвідування:');\n        } else if (selectedDoctor === 'therapist') {\n            this.createInputField('age', 'Вік:');\n        }\n\n        const createBtn = document.createElement('button');\n        createBtn.innerText = 'Створити';\n        createBtn.addEventListener('click', () => this.createVisit());\n        this.fieldsContainer.appendChild(createBtn);\n\n        const closeBtn = document.createElement('button');\n        closeBtn.innerText = 'Закрити';\n        closeBtn.addEventListener('click', () => this.closeVisitModal());\n        this.fieldsContainer.appendChild(closeBtn);\n\n    }\n\n    closeVisitModal(){\n        this.modal.remove();\n    }\n    createVisit(){\n        const inputs = this.fieldsContainer.querySelectorAll('.modalInput');\n        const visitData = {};\n\n        visitData['selectedDoctor'] = visitData['selectedDoctor'] = this.selectElement.options[this.selectElement.selectedIndex].text;;\n\n        inputs.forEach(input => {\n            const id = input.id;\n            const value = input.type === 'select-one' ? input.options[input.selectedIndex].value : input.value;\n            visitData[id] = value;\n        });\n\n        this.visit = visitData;\n        \n        console.log(createVisit.visit);\n        this.closeVisitModal();\n        //виклик функції для створення картки та відправлення на сервер------\n\n        //-------------------------------------------------------------------\n    }\n\n    createInputField(fieldName, label) {\n        const inputField = document.createElement('div');\n        inputField.innerHTML = `\n            <label for=\"${fieldName}\">${label}</label>\n            <input type=\"text\" id=\"${fieldName}\" name=\"${fieldName}\" class=\"modalInput\">\n        `;\n        this.fieldsContainer.appendChild(inputField);\n    }\n    createSelectField(fieldName, label, options) {\n        const selectField = document.createElement('div');\n        const selectOptions = options.map(option => `<option value=\"${option}\">${option}</option>`).join('');\n        selectField.innerHTML = `\n            <label for=\"${fieldName}\">${label}</label>\n            <select id=\"${fieldName}\" name=\"${fieldName}\" class=\"modalInput\">\n                <option value=\"\" disabled selected hidden>Оберіть ${label.toLowerCase()}</option>\n                ${selectOptions}\n            </select>\n        `;\n        this.fieldsContainer.appendChild(selectField);\n    }\n}\n\n//тестова строчка допоки не буде кнопки для створення візиту--------\nconst createVisit = new CreateVisitModal();\n//------------------------------------------------------------------\n"]}