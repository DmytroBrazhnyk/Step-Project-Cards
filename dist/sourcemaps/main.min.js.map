{"version":3,"sources":["01_main.js"],"names":["visitContainer","document","querySelector","CreateVisitModal","[object Object]","this","modal","createElement","classList","add","innerHTML","body","appendChild","selectElement","getElementById","fieldsContainer","addEventListener","handleDoctorChange","bind","selectedDoctor","value","updateAdditionalFields","createInputField","createSelectField","createBtn","innerText","createVisit","closeBtn","closeVisitModal","remove","inputs","querySelectorAll","visitData","options","selectedIndex","text","forEach","input","id","type","visit","console","log","Card","addToVisitsList","fieldName","label","inputField","selectField","selectOptions","map","option","join","toLowerCase","data","card","createCard","visitsListSection","additionalInfoContainer","btnContainer","cardElement","fullName","renderAdditionalInfo","handleButtonClick","translations","doctorName","purpose","description","urgency","pressure","bmi","cardiovascularDiseases","age","lastVisitDate","additionalInfoHtml","key","event","target","contains","redactCard","deleteCard","showCard","showMoreBtn","toggle","testObj","cardInstance","cardInstance2","cardInstance3"],"mappings":"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","file":"../js/main.min.js","sourcesContent":["const visitContainer = document.querySelector(\".visits-list\");\r\n\r\nclass CreateVisitModal {\r\n    constructor() {\r\n        this.modal = document.createElement('div');\r\n        this.modal.classList.add('creadeVisitModal');\r\n        this.modal.innerHTML = `\r\n        <div class=\"modal-content\">\r\n            <label for=\"doctorSelect\">Оберіть лікаря:</label>\r\n            <select id=\"doctorSelect\">\r\n                <option value=\"\" disabled selected hidden>Оберіть лікаря</option>\r\n                <option value=\"cardiologist\">Кардіолог</option>\r\n                <option value=\"dentist\">Стоматолог</option>\r\n                <option value=\"therapist\">Терапевт</option>\r\n            </select>\r\n            <div id=\"fieldsContainer\"></div>\r\n        </div>\r\n        `;\r\n\r\n        document.body.appendChild(this.modal);\r\n\r\n        this.selectElement = document.getElementById('doctorSelect');\r\n        this.fieldsContainer = document.getElementById('fieldsContainer');\r\n        this.selectElement.addEventListener('change', this.handleDoctorChange.bind(this));\r\n    }\r\n    handleDoctorChange() {\r\n        const selectedDoctor = this.selectElement.value;\r\n        this.updateAdditionalFields(selectedDoctor);\r\n    }\r\n    updateAdditionalFields(selectedDoctor) {\r\n\r\n        this.fieldsContainer.innerHTML = '';\r\n\r\n        this.createInputField(\"purpose\",\"Мета візиту\")\r\n        this.createInputField(\"description\",\"Короткий опис візиту\")\r\n        this.createSelectField(\"urgency\", \"Терміновість\", [\"Звичайна\", \"Пріоритетна\", \"Невідкладна\"],\"оберіть терміновість\");\r\n        this.createInputField(\"fullName\",\"ПІБ\")\r\n\r\n        if (selectedDoctor === 'cardiologist') {\r\n            this.createInputField('pressure', 'Звичайний тиск:');\r\n            this.createInputField('bmi', 'Індекс маси тіла:');\r\n            this.createInputField('cardiovascularDiseases', 'Перенесені захворювання серцево-судинної системи:');\r\n            this.createInputField('age', 'Вік:');\r\n        } else if (selectedDoctor === 'dentist') {\r\n            this.createInputField('lastVisitDate', 'Дата останнього відвідування:');\r\n        } else if (selectedDoctor === 'therapist') {\r\n            this.createInputField('age', 'Вік:');\r\n        }\r\n\r\n        const createBtn = document.createElement('button');\r\n        createBtn.innerText = 'Створити';\r\n        createBtn.addEventListener('click', () => this.createVisit());\r\n        this.fieldsContainer.appendChild(createBtn);\r\n\r\n        const closeBtn = document.createElement('button');\r\n        closeBtn.innerText = 'Закрити';\r\n        closeBtn.addEventListener('click', () => this.closeVisitModal());\r\n        this.fieldsContainer.appendChild(closeBtn);\r\n\r\n    }\r\n\r\n    closeVisitModal(){\r\n        this.modal.remove();\r\n    }\r\n    createVisit(){\r\n        const inputs = this.fieldsContainer.querySelectorAll('.modalInput');\r\n        const visitData = {};\r\n\r\n        visitData['selectedDoctor'] = visitData['selectedDoctor'] = this.selectElement.options[this.selectElement.selectedIndex].text;;\r\n\r\n        inputs.forEach(input => {\r\n            const id = input.id;\r\n            const value = input.type === 'select-one' ? input.options[input.selectedIndex].value : input.value;\r\n            visitData[id] = value;\r\n        });\r\n\r\n        this.visit = visitData;\r\n        \r\n        console.log(createVisit.visit);\r\n        this.closeVisitModal();\r\n        //виклик функції для створення картки та відправлення на сервер------\r\n        const card = new Card(createVisit.visit);\r\n        card.addToVisitsList();\r\n        //-------------------------------------------------------------------\r\n    }\r\n\r\n    createInputField(fieldName, label) {\r\n        const inputField = document.createElement('div');\r\n        inputField.innerHTML = `\r\n            <label for=\"${fieldName}\">${label}</label>\r\n            <input type=\"text\" id=\"${fieldName}\" name=\"${fieldName}\" class=\"modalInput\">\r\n        `;\r\n        this.fieldsContainer.appendChild(inputField);\r\n    }\r\n    createSelectField(fieldName, label, options) {\r\n        const selectField = document.createElement('div');\r\n        const selectOptions = options.map(option => `<option value=\"${option}\">${option}</option>`).join('');\r\n        selectField.innerHTML = `\r\n            <label for=\"${fieldName}\">${label}</label>\r\n            <select id=\"${fieldName}\" name=\"${fieldName}\" class=\"modalInput\">\r\n                <option value=\"\" disabled selected hidden>Оберіть ${label.toLowerCase()}</option>\r\n                ${selectOptions}\r\n            </select>\r\n        `;\r\n        this.fieldsContainer.appendChild(selectField);\r\n    }\r\n}\r\n\r\n//тестова строчка допоки не буде кнопки для створення візиту--------\r\nconst createVisit = new CreateVisitModal();\r\n//------------------------------------------------------------------\r\n//----------------------------------------------------------------------------------------\r\n// картка візиту\r\n// class VisitCard {\r\n//     constructor(visitData) {\r\n//         this.visitData = visitData;\r\n//         this.isExpanded = false;\r\n//         this.isEditing = false;\r\n//         this.createCardElement();\r\n//         this.render();\r\n//     }\r\n\r\n//     createCardElement() {\r\n//         this.cardElement = document.createElement('div');\r\n//         this.cardElement.classList.add('visitCard');\r\n\r\n//         // Додати інформацію, яка завжди видима\r\n//         this.cardElement.innerHTML = `\r\n//             <div class=\"visibleInfo\">\r\n//                 <p>ПІБ: ${this.visitData.fullName}</p>\r\n//                 <p>Лікар: ${this.visitData.doctorName}</p>\r\n//             </div>\r\n//             <div class=\"additionalInfoContainer\"></div>\r\n//             <button class=\"showMoreBtn\">Показати більше</button>\r\n//             <button class=\"editBtn\">Редагувати</button>\r\n//             <button class=\"saveChangesBtn\" style=\"display: none;\">Зберегти зміни</button>\r\n//             <span class=\"deleteIcon\">❌</span>\r\n//         `;\r\n\r\n//         // Додати обробники подій\r\n//         this.cardElement.querySelector('.showMoreBtn').addEventListener('click', () => this.toggleExpanded());\r\n//         this.cardElement.querySelector('.editBtn').addEventListener('click', () => this.toggleEditing());\r\n//         this.cardElement.querySelector('.saveChangesBtn').addEventListener('click', () => this.saveChanges());\r\n//         this.cardElement.querySelector('.deleteIcon').addEventListener('click', () => this.deleteCard());\r\n//     }\r\n\r\n//     render() {\r\n//         const additionalInfoContainer = this.cardElement.querySelector('.additionalInfoContainer');\r\n//         additionalInfoContainer.innerHTML = ''; // Очищаємо контейнер перед відображенням\r\n\r\n//         if (this.isExpanded) {\r\n//             Object.keys(this.visitData).forEach(key => {\r\n//                 additionalInfoContainer.innerHTML += `<p>${key}: ${this.visitData[key]}</p>`;\r\n//             });\r\n//         }\r\n\r\n//         document.querySelector('.visits-list').appendChild(this.cardElement);\r\n\r\n//         this.cardElement.querySelector('.showMoreBtn').innerText = this.isExpanded ? 'Показати менше' : 'Показати більше';\r\n//     }\r\n\r\n//     toggleExpanded() {\r\n//         this.isExpanded = !this.isExpanded;\r\n//         this.render();\r\n//     }\r\n\r\n//     toggleEditing() {\r\n//         this.isEditing = !this.isEditing;\r\n//         const additionalInfoContainer = this.cardElement.querySelector('.additionalInfoContainer');\r\n//         const visibleInfoContainer = this.cardElement.querySelector('.visibleInfo');\r\n\r\n//         if (this.isEditing) {\r\n//             visibleInfoContainer.style.display = 'none';\r\n//             additionalInfoContainer.style.display = 'block';\r\n//         } else {\r\n//             additionalInfoContainer.style.display = 'none';\r\n//             visibleInfoContainer.style.display = 'block';\r\n\r\n//             visibleInfoContainer.innerHTML = `\r\n//                 <p>ПІБ: ${this.visitData.fullName}</p>\r\n//                 <p>Лікар: ${this.visitData.doctorName}</p>\r\n//             `;\r\n//         }\r\n\r\n//         this.renderEditForm();\r\n//     }\r\n\r\n//     renderEditForm() {\r\n//         const additionalInfoContainer = this.cardElement.querySelector('.additionalInfoContainer');\r\n//         additionalInfoContainer.innerHTML = `\r\n//             <label for=\"editedFullName\">ПІБ:</label>\r\n//             <input type=\"text\" id=\"editedFullName\" value=\"${this.visitData.fullName}\">\r\n//             <label for=\"editedSelectedDoctor\">Лікар:</label>\r\n//             <input type=\"text\" id=\"editedSelectedDoctor\" value=\"${this.visitData.doctorName}\">\r\n//             <label for=\"editedPurpose\">Мета:</label>\r\n//             <input type=\"text\" id=\"editedPurpose\" value=\"${this.visitData.purpose}\">\r\n//             <!-- Додайте інші поля редагування, використовуючи this.visitData -->\r\n//         `;\r\n//     }\r\n\r\n//     saveChanges() {\r\n//         this.visitData.fullName = document.getElementById('editedFullName').value;\r\n//         this.visitData.doctorName = document.getElementById('editedSelectedDoctor').value;\r\n//         this.visitData.purpose = document.getElementById('editedPurpose').value;\r\n//         // Оновіть інші поля, якщо необхідно\r\n//         // ...\r\n\r\n//         const additionalInfoContainer = this.cardElement.querySelector('.additionalInfoContainer');\r\n//         const visibleInfoContainer = this.cardElement.querySelector('.visibleInfo');\r\n\r\n//         additionalInfoContainer.style.display = 'none';\r\n//         visibleInfoContainer.style.display = 'block';\r\n\r\n//         visibleInfoContainer.innerHTML = `\r\n//             <p>ПІБ: ${this.visitData.fullName}</p>\r\n//             <p>Лікар: ${this.visitData.doctorName}</p>\r\n//         `;\r\n\r\n//         this.cardElement.querySelector('.editBtn').style.display = 'inline-block';\r\n//         this.cardElement.querySelector('.saveChangesBtn').style.display = 'none';\r\n//     }\r\n\r\n//     deleteCard() {\r\n//         this.cardElement.remove();\r\n//     }\r\n// }\r\n\r\n// class VisitCardManager {\r\n//     constructor() {\r\n//         this.visitsList = document.querySelector('.visits-list');\r\n//     }\r\n\r\n//     addVisitCard(visitData) {\r\n//         const visitCard = new VisitCard(visitData);\r\n//         this.visitsList.appendChild(visitCard.cardElement);\r\n//     }\r\n// }\r\n\r\n// const visitCardManager = new VisitCardManager();\r\n\r\n// // Приклад данних для кількох візитів\r\n// const visitsData = [\r\n//     { \r\n//         doctorName: 'Доктор Іванова',\r\n//         purpose: 'Регулярний огляд',\r\n//         description: 'Аналіз крові та артеріального тиску',\r\n//         urgency: 'Пріоритетна',\r\n//         fullName: 'Петренко Іван Петрович',\r\n//         bloodPressure: '120/80',\r\n//         bmi: 24.5,\r\n//         cardiovascularDiseases: 'Немає',\r\n//         age: 35,\r\n//         lastVisitDate: '2023-01-09'\r\n//     },\r\n//     { \r\n//         doctorName: 'Доктор Іванова',\r\n//         purpose: 'Регулярний огляд',\r\n//         description: 'Аналіз крові та артеріального тиску',\r\n//         urgency: 'Пріоритетна',\r\n//         fullName: 'Петренко Іван Петрович',\r\n//         bloodPressure: '120/80',\r\n//         bmi: 24.5,\r\n//         cardiovascularDiseases: 'Немає',\r\n//         age: 35,\r\n//         lastVisitDate: '2023-01-09'\r\n//     },\r\n//     // Додавайте більше об'єктів даних візитів за потреби\r\n// ];\r\n\r\n// visitsData.forEach(visitData => {\r\n//     visitCardManager.addVisitCard(visitData);\r\n// });\r\n\r\n\r\nclass Card {\r\n    constructor(visitData) {\r\n        this.data = visitData;\r\n        this.card = this.createCard();\r\n        this.visitsListSection = document.querySelector('.visits-list');\r\n        this.additionalInfoContainer = this.card.querySelector('.additionalInfoContainer');\r\n        this.btnContainer = this.card.querySelector(\".buttonsContainer\")\r\n    }\r\n\r\n    createCard() {\r\n        const cardElement = document.createElement(\"div\");\r\n        cardElement.classList.add(\"visitCard\");\r\n        cardElement.innerHTML = `\r\n            <div class=\"visibleInfo\">\r\n                <p>ПІБ: ${this.data.fullName}</p>\r\n                <p>Лікар: ${this.data.selectedDoctor}</p>\r\n            </div>\r\n            <div class=\"additionalInfoContainer\">\r\n                ${this.renderAdditionalInfo()}\r\n            </div>\r\n            <div class=\"buttonsContainer\">\r\n                <button class=\"showMoreBtn\">Показати більше</button>\r\n                <button class=\"editBtn\">Редагувати</button>\r\n                <button class=\"deleteIcon\">❌</button>\r\n            </div>\r\n        `;\r\n        cardElement.addEventListener('click', this.handleButtonClick.bind(this));\r\n        return cardElement;\r\n    }\r\n\r\n    renderAdditionalInfo() {\r\n        const translations = {\r\n            doctorName: 'Лікар',\r\n            purpose: 'Мета візиту',\r\n            description: 'Короткий опис візиту',\r\n            urgency: 'Терміновість',\r\n            fullName: 'ПІБ',\r\n            pressure: 'Звичайний тиск',\r\n            bmi: 'Індекс маси тіла',\r\n            cardiovascularDiseases: 'Перенесені захворювання серцево-судинної системи',\r\n            age: 'Вік',\r\n            lastVisitDate: 'Дата останнього відвідування'\r\n        };\r\n        let additionalInfoHtml = '';\r\n        for (const key in this.data) {\r\n            if (key !== 'selectedDoctor' && key !== 'fullName') {\r\n                const translatedKey = translations[key] || key;\r\n                additionalInfoHtml += `<p>${translatedKey}: ${this.data[key]}</p>`;\r\n            }\r\n        }\r\n        return additionalInfoHtml;\r\n    }\r\n//------------------------кнопки--------------------------------------------\r\n    handleButtonClick(event) {\r\n        const target = event.target;\r\n        if (target.classList.contains('editBtn')) {\r\n            this.redactCard();\r\n        } else if (target.classList.contains('deleteIcon')) {\r\n            this.deleteCard();\r\n        } else if (target.classList.contains(\"showMoreBtn\")){\r\n            this.showCard();\r\n        }\r\n    }\r\n\r\n    deleteCard() {\r\n        this.card.remove();\r\n    }\r\n    showCard(){\r\n        const showMoreBtn = this.card.querySelector('.showMoreBtn')\r\n        this.additionalInfoContainer.classList.toggle('active');\r\n        showMoreBtn.innerText = this.additionalInfoContainer.classList.contains(\"active\") ? \"Згорнути\" : \"Показати більше\";\r\n    }\r\n    redactCard(){\r\n        this.additionalInfoContainer.classList.add(\"hiden\")\r\n        this.btnContainer.classList.add(\"hiden\")\r\n    }\r\n//---------------------------------------------------------------------------\r\n    addToVisitsList() {\r\n        this.visitsListSection.appendChild(this.card);\r\n    }\r\n}\r\n//-----------------------------------------------------------------------------\r\n\r\nconst testObj ={ \r\n            selectedDoctor: 'Кардіолог',\r\n            purpose: 'Регулярний огляд',\r\n            description: 'Аналіз крові та артеріального тиску',\r\n            urgency: 'Пріоритетна',\r\n            fullName: 'Петренко Іван Петрович',\r\n            pressure: '120/80',\r\n            bmi: 24.5,\r\n            cardiovascularDiseases: 'Немає',\r\n            age: 35,\r\n            lastVisitDate: '2023-01-09'\r\n        }\r\n\r\n        const cardInstance = new Card(testObj);\r\n        cardInstance.addToVisitsList();\r\n\r\n        const cardInstance2 = new Card(testObj);\r\n        cardInstance2.addToVisitsList()\r\n\r\n        const cardInstance3 = new Card(testObj);\r\n        cardInstance3.addToVisitsList()"]}